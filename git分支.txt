分支提交代码
1.切换分支
git checkout develop
2.更新本地分支代码
git pull origin develop
3.合并分支代码
git merge develop
4.提交更改
git add .
5.提交更改内容
git commit -m "****"
6.真正提交
git push origin develop


查看远程所有分支
git branch -a
查看本地所有分支
git branch
创建分支名
git branch 分支名
切换分支
git checkout 分支名
git checkout -b 分支名(若分支不存在，则创建他)
删除分支
git branch -d 分支名
-d当分支已经合并到主干后删除
-D无论如何都删除分支


撤销前一次commit
git revert HEAD
撤销所有本地修改
git reset --hard
撤销所有本地到上一次修改
git reset --hard HEAD^
撤销上一次commit，将commit的文件撤回暂存区
git reset --soft HEAD^
撤销到上上次,就是HEAD^^,以此类推
git revert 是撤销某次操作，此次操作之前的commit都会被保留
git reset 是撤销某次提交，但是此次之后的修改都会被退回到暂存区
将此次更新文件并入到上次的commit的记录中，不新添加commit
git commit -amend


git 克隆分支
git clone -b 分支名 仓库地址

1，将开发分支代码合入到master中
git checkout dev           #切换到dev开发分支
git pull
git checkout master
git merge dev              #合并dev分支到master上
git push origin master     #将代码推到master上

git 合并某个节点的提交到另一个分支
git checkout develop
git cherry-pick <commitHash>
git push
 

借鉴于https://segmentfault.com/a/1190000020023683， https://www.cnblogs.com/lovele-/p/10400147.html

git项目迁移
git clone --mirror <老仓库的git地址>
cd <克隆下来的项目目录>
git remote set-url origin <新的git项目的地址>
git push -f origin